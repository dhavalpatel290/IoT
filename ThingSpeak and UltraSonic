
Cloud

// http://www.arduinesp.com
//
// Plot DTH11 data on thingspeak.com using an ESP8266
// April 11 2015
// Author: Jeroen Beemster
// Website: http://www.arduinesp.com

#include <DHT.h>
#include <ESP8266WiFi.h>

// replace with your channel’s thingspeak API key,
String apiKey = “OFP1GZ8EF89QM4OB”;
const char* ssid = “IoT”;
const char* password = “1234@iot”;

const char* server = “api.thingspeak.com”;
#define DHTPIN 13 // what pin we’re connected to

DHT dht(DHTPIN, DHT11,15);
WiFiClient client;

void setup() {
Serial.begin(115200);
delay(10);
dht.begin();

WiFi.begin(ssid, password);

Serial.println();
Serial.println();
Serial.print(“Connecting to “);
Serial.println(ssid);

WiFi.begin(ssid, password);

while (WiFi.status() != WL_CONNECTED) {
delay(500);
Serial.print(“.”);
}
Serial.println(“”);
Serial.println(“WiFi connected”);

}

void loop() {

float h = dht.readHumidity();
float t = dht.readTemperature();
if (isnan(h) || isnan(t)) {
Serial.println(“Failed to read from DHT sensor!”);
return;
}

if (client.connect(server,80)) { // “184.106.153.149” or api.thingspeak.com
String postStr = apiKey;
postStr +=”&field1=”;
postStr += String(t);
postStr +=”&field2=”;
postStr += String(h);
postStr += “\r\n\r\n”;

client.print(“POST /update HTTP/1.1\n”);
client.print(“Host: api.thingspeak.com\n”);
client.print(“Connection: close\n”);
client.print(“X-THINGSPEAKAPIKEY: “+apiKey+”\n”);
client.print(“Content-Type: application/x-www-form-urlencoded\n”);
client.print(“Content-Length: “);
client.print(postStr.length());
client.print(“\n\n”);
client.print(postStr);

Serial.print(“Temperature: “);
Serial.print(t);
Serial.print(” degrees Celcius Humidity: “);
Serial.print(h);
Serial.println(“% send to Thingspeak”);
}
client.stop();

Serial.println(“Waiting…”);
// thingspeak needs minimum 15 sec delay between updates
delay(20000);
}








--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------
--------------------------------------------------------------------

kevin vora	Uncategorized	Leave a comment April 30, 2018 1 Minute	
Ultrasonic

 

#define TRIGGER 5
#define ECHO 4

// NodeMCU Pin D1 > TRIGGER | Pin D2 > ECHO

void setup() {

Serial.begin (115200);
pinMode(TRIGGER, OUTPUT);
pinMode(ECHO, INPUT);
pinMode(BUILTIN_LED, OUTPUT);
pinMode(13,OUTPUT);
}
void loop() {

long duration, distance;
digitalWrite(TRIGGER, LOW);
delayMicroseconds(2);

digitalWrite(TRIGGER, HIGH);
delayMicroseconds(10);

digitalWrite(TRIGGER, LOW);
duration = pulseIn(ECHO, HIGH);
distance = (duration/2) / 29.1;

Serial.print(“Centimeter:”);
Serial.println(distance);
//delay(1000);
if(distance<10){
digitalWrite(13,HIGH);
delay(250);
digitalWrite(13,LOW);
delay(250);
}
else if(distance<50 && distance>10){
digitalWrite(13,HIGH);
delay(600);
digitalWrite(13,LOW);
delay(600);
}
else if(distance>50 && distance <150){
digitalWrite(13,HIGH);
delay(800);
digitalWrite(13,LOW);
delay(800);
}
else{
digitalWrite(13,HIGH);
delay(1000);
digitalWrite(13,LOW);
delay(1000);
}
}
