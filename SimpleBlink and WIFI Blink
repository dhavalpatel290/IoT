
Blink

/*
ESP8266 Blink by Simon Peter
Blink the blue LED on the ESP-01 module
This example code is in the public domain

The blue LED on the ESP-01 module is connected to GPIO1
(which is also the TXD pin; so we cannot use Serial.print() at the same time)

Note that this sketch uses LED_BUILTIN to find the pin with the internal LED
*/

void setup() {
pinMode(13, OUTPUT); // Initialize the LED_BUILTIN pin as an output
}

// the loop function runs over and over again forever
void loop() {
digitalWrite(13, LOW);
delay(1000); // Wait for a second
digitalWrite(13, HIGH);
delay(1000); // Wait for two seconds (to demonstrate the active low LED)
}




--------------------------------------------------
--------------------------------------------------
--------------------------------------------------
--------------------------------------------------
--------------------------------------------------
--------------------------------------------------

kevin vora	Uncategorized	Leave a comment April 30, 2018 0 Minutes	
Server

#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>

// Replace with your network credentials
const char* ssid = “NU”;
const char* password = “12345678”;

ESP8266WebServer server(80); //instantiate server at port 80 (http port)

String page = “”;

void setup(void){
//the HTML of the web page
page = “<h1>Simple NodeMCU Web Server</h1><p><a href=\”LEDOn\”><button>ON</button></a>&nbsp;<a href=\”LEDOff\”><button>OFF</button></a></p>”;
//make the LED pin output and initially turned off
pinMode(13, OUTPUT);
digitalWrite(13, LOW);

delay(1000);
Serial.begin(9600);
WiFi.begin(ssid, password); //begin WiFi connection
Serial.println(“”);

// Wait for connection
while (WiFi.status() != WL_CONNECTED) {
delay(500);
Serial.print(“.”);
}
Serial.println(“”);
Serial.print(“Connected to “);
Serial.println(ssid);
Serial.print(“IP address: “);
Serial.println(WiFi.localIP());

server.on(“/”, [](){
server.send(200, “text/html”, page);
});
server.on(“/LEDOn”, [](){
server.send(200, “text/html”, page);
digitalWrite(13, HIGH);
delay(1000);
});
server.on(“/LEDOff”, [](){
server.send(200, “text/html”, page);
digitalWrite(13, LOW);
delay(1000);
});
server.begin();
Serial.println(“Web server started!”);
}

void loop(void){
server.handleClient();
}
